项目拓展：
 做ajax请求，返回json的数据格式的具体实现步骤：
    1.pom文件加入处理json的工具库的依赖， springmvc默认使用的jackson。
    2.在sprigmvc配置文件（springmvc.xml）中加入 <mvc:annotation-driven> 注解驱动。
    3.在处理器方法的上面加入@ResponseBody注解。
            内部原理：
              springmvc处理器方法返回Object， 可以转为json输出到浏览器，响应ajax
              1）<mvc:annotation-driven> 注解驱动。
                 注解驱动实现的功能是 完成java对象到json，xml， text，二进制等数据格式的转换。
                 <mvc:annotation-driven>在加入到springmvc配置文件后， 会自动创建HttpMessageConverter接口
                 的7个实现类对象， 包括 MappingJackson2HttpMessageConverter （使用jackson工具库中的ObjectMapper实现java对象转为json字符串）
                 注：
                 HttpMessageConverter接口：消息转换器。
                 功能：定义了java转为json，xml等数据格式的方法。 这个接口有很多的实现类。
                       这些实现类完成 java对象到json， java对象到xml，java对象到二进制数据的转换

                   HttpMessageConverter接口实现类（7个）               作用
                     ByteArrayHttpMessageConverter             负责读取二进制格式的数据和写出二进制格式的数据
                     StringHttpMessageConverter                负责读取字符串格式的数据和写出字符串格式的数据
                     ResourceHttpMessageConverter              负责读取资源文件和写出资源文件数据
                     SourceHttpMessageConverter                    能够读/写来自HTTP的请求与响应的javax.xml.transform.Source
                                                               支持DOMSource,SAXSource,和StreamSource的XML 格式
                     AllEncompassingFormHttpMessageConverter   负责处理表单(form)数据
                     Jaxb2RootElementHttpMessageConverter      使用AXB 负责读取和写入 xml 标签格式的数据
                     MappingJackson2HttpMessageConverter          负责读取和写入 json 格式的数据。利用Jackson 的 ObjectMapper 读写 json 数据，
                                                               操作Object 类型数据，可读取 application/json，响
                                                               应媒体类型为 application/json


                 #1）没有加入注解驱动标签<mvc:annotation-driven /> 时的状态
                 org.springframework.http.converter.ByteArrayHttpMessageConverter
                 org.springframework.http.converter.StringHttpMessageConverter
                 org.springframework.http.converter.xml.SourceHttpMessageConverter
                 org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter
                 #2）加入注解驱动标签时<mvc:annotation-driven />的状态
                 org.springframework.http.converter.ByteArrayHttpMessageConverter
                 org.springframework.http.converter.StringHttpMessageConverter
                 org.springframework.http.converter.ResourceHttpMessageConverter
                 org.springframework.http.converter.ResourceRegionHttpMessageConverter
                 org.springframework.http.converter.xml.SourceHttpMessageConverter
                 org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter
                 org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter
                 org.springframework.http.converter.json.MappingJackson2HttpMessageConverter


    步骤流程：
    1：需要json的工具库的依赖：
    <!--Jackson依赖-->
          <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.0</version>
          </dependency>
          <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.0</version>
          </dependency>
    2：在springmvc.xml配置文件添加：
    <!-- default-servlet-handler 和 @RequestMapping注解 有冲突， 需要加入annotation-driven 解决问题-->
    <mvc:annotation-driven />
    3：编写Ajax访问页面：WEB-INF/AjaxView/index.jsp
        <%@ page contentType="text/html;charset=UTF-8" language="java" %>
        <html>
        <head>
            <title>Title</title>
             <script type="text/javascript" src="js/jquery-3.4.1.js"></script>
             <script type="text/javascript">
                 $(function(){
                     $("button").click(function(){
                         //alert("button click");
                         $.ajax({
                             //@RequestMapping(value = "/returnString-view")
                             // url地址与@RequestMapping地址相同
                             url:"returnString-view",
                             data:{
                                 name:"zhangsan",
                                 age:20
                             },
                             type:"post",
                             dataType:"text",
                             //dataType:"json",
                             success:function(resp){
                                 //resp从服务器端返回的是json格式的字符串 {"name":"zhangsan","age":20}
                                 //jquery会把字符串转为json对象， 赋值给resp形参。

                                 // [{"name":"李四同学","age":20},{"name":"张三","age":28}]
                                 //alert(resp.name + "    "+resp.age);

                                 /*$.each(resp,function(i,n){
                                     alert(n.name+"   "+n.age)
                                 })*/
                                 alert("返回的是文本数据："+resp);

                             }
                         })
                     })
                 })
             </script>
        </head>
        <body>
             <p>处理器方法返回String表示视图名称</p>
             <form action="returnString-view" method="post">
                  姓名：<input type="text" name="name"> <br/>
                  年龄：<input type="text" name="age"> <br/>
                  <input type="submit" value="提交参数">
             </form>
             <br/>
            <br/>
            <button id="btn">发起ajax请求</button>

        </body>
        </html>
     4：编写控制类
         /**
              * 处理器方法返回一个Student类，通过框架转为json，响应ajax请求
              * @ResponseBody:
              *    作用：把处理器方法返回对象转为json后，通过HttpServletResponse输出给浏览器。
              *    位置：方法的定义上面。 和其它注解没有顺序的关系。
              * 返回对象框架的处理流程：
              *  1. 框架会把返回Student类型，调用框架的中ArrayList<HttpMessageConverter>中每个类的canWrite()方法
              *     检查那个HttpMessageConverter接口的实现类能处理Student类型的数据--MappingJackson2HttpMessageConverter
              *
              *  2.框架会调用实现类的write（）， MappingJackson2HttpMessageConverter的write()方法
              *    把李四同学的student对象转为json， 调用Jackson的ObjectMapper实现转为json
              *    contentType: application/json;charset=utf-8
              *
              *  3.框架会调用@ResponseBody把2的结果数据输出到浏览器， ajax请求处理完成
              */
             @RequestMapping(value = "/returnString-view")
             // Ajax的url地址与@RequestMapping地址相同
             @ResponseBody
             public Student doStudentJsonObject(String name, Integer age) {
                 //调用service，获取请求结果数据 ， Student对象表示结果数据
                 Student student = new Student();
                 student.setName("李四同学");
                 student.setAge(20);
                 return student; // 会被框架转为json

             }